import sys
import os

headerfilename = sys.argv[1]+'.h'
srcfilename    = sys.argv[1]+'.cpp'

headerfile_basename = os.path.basename(headerfilename)

headerlines = []
headerlines.append("// file generated by copy_files_to_c_header.py \n");
headerlines.append("// each file's contents are copied into static char strings \n\n");
headerlines.append("#if !defined("+headerfile_basename.replace(".","_").upper()+"_INCLUDED) \n");
headerlines.append("#define "+headerfile_basename.replace(".","_").upper()+"_INCLUDED \n");

srclines = []
srclines.append("// file generated by copy_files_to_c_header.py \n");
srclines.append("// each file's contents are copied into static char strings \n\n");
srclines.append("#include <"+headerfile_basename+'>\n')  

for filename in sys.argv[2:len(sys.argv)]:
  infile = open(filename,"r")
  inlines = infile.readlines()
  
  headerlines.append("extern const char * ")
  headerlines.append(os.path.basename(filename).replace(".","_"))
  headerlines.append(";\n")  
  
  srclines.append("const char * ")
  srclines.append(os.path.basename(filename).replace(".","_"))
  srclines.append(" = ")
  
  for line in inlines:
    if line[len(line)-1] == '\n':
      line = line[:len(line)-1]      
    line = "\"" + (line[0:len(line)]).replace("\"","\\\"") + "\\n\"" + "\\\n"      
    srclines.append(line)
    
  srclines.append(";\n\n")
  
headerlines.append("#endif\n");

def write_to_file_if_not_same(lines,fname):    
  file_dir = os.path.dirname(fname)
  
  if os.path.isdir(file_dir) == False:
    os.makedirs(file_dir)
    
  tmp_fname = fname+".tmp"    
  
  tmp_file  = open(tmp_fname,"w")
  tmp_file.writelines(lines);
  tmp_file.close();
  
  need_move = True
  
  old_lines = None
  
  if os.path.isfile(fname):
    old_file  = open(fname,"r")
    old_lines = old_file.readlines()
    old_file.close()

  
  if old_lines :
    tmp_file  = open(tmp_fname,"r")
    tmp_lines = tmp_file.readlines();
    tmp_file.close();
    
    if tmp_lines == old_lines:
      need_move = False
      
  if need_move:
    os.rename(tmp_fname,fname)
  else:
    os.remove(tmp_fname)    
    
write_to_file_if_not_same(headerlines,headerfilename)
write_to_file_if_not_same(srclines,srcfilename)    

